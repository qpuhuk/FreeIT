package AlexLink.HomeWork.AbstractClass;

import java.util.ArrayList;

public class RunTest {

    public static void main(String[] args) {

//В классе Транспорт есть поля:
//- Мощность(в лошадиных силах) - Максимальная скорость(км/ч) - Масса (кг) - Марка( например: Audi, BMW , Boing,  Airbus,  Scania , МАЗ и т.д. )
//В классе Наземный добавляются поля:
// -Количество колёс
// - Расход топлива(л/100км)
//В классе Легковой добавляются поля:
//- Тип кузова - Кол-во пассажиров
//В классе Грузовой добавляется  поле:
//- Грузоподъёмность(т)
//В классе Воздушный добавляются поля:
// - Размах крыльев (м)
// - Минимальная длина взлётно-посадочной полосы для взлёта
//В классе Гражданский добавляются поля:
// - Кол-во пассажиров
// - Наличие бизнес класса (true/false)
//В классе Военный  добавляются поля:
//- Наличие системы катапультирования (true/false) - Кол-во ракет на борту
//В конечных классах (Легковой, Грузовой, Военный, Гражданский) разработать метод описание который будет возвращать
// составленную строку с описанием всех характеристик объекта. В строку включить ещё один параметр мощность в киловаттах (кВ) .
// Расчёт мощности в киловаттах производится в отдельном методе :
//1 л.с = 0.74 кВ

        ArrayList<Transport> transports = new ArrayList<>();

        transports.add(new PassengerCar(220, 300, 2000, "Audi",
                4, 10, "Sedan", 4));
        transports.add(new CargoCar(450, 160, 3000, "Toyota", 6, 20, 2000));
        transports.add(new PassengerPlane(2090, 1000, 20000, "Boing",
                40, 400, 200, true));
        transports.add(new MilitaryPlane(4000, 1200, 3000, "Boing",
                20, 200, true, 14));
        transports.forEach(Transport::getInfo);
        System.out.println("***************************");
//Для легкового разработать метод который будет принимать время и считать сколько километров проедет машина двигаясь
// с максимальной скоростью и сколько топлива она израсходует за это время, результат вывести в консоль,
// расчёт расходуемого топлива вынести в отдельный метод private.
// Результат работы метода должен вывести такую строчку:
// За время (ваше введённое время) ч, автомобиль (марка автомобиля)
//двигаясь с максимальной скоростью (ваша максимальная скорость) км/ч
//проедет (xxx) км  и израсходует (xxx) литров топлива.
//Мой результат выглядит так:
//“За время 2,5 часа, автомобиль Audi двигаясь с максимальной скоростью 230 км/ч израсходует 46.0 литров топлива”

        int time = 2;
        PassengerCar passengerCarNew = new PassengerCar(220, 300, 2000, "Audi",
                4, 10, "Sedan", 4);
        System.out.printf("За время %d ч, автомобиль %s, двигаясь с максимальной скоростью %d км/ч проедет %d км  и израсходует %d литров топлива.\n",
                time, passengerCarNew.getModel(), passengerCarNew.getMaxSpeed(), passengerCarNew.maxDistance(time), passengerCarNew.getFuel(time));
        System.out.println("***************************");
//Для грузового разработать метод который проверит можно ли загрузить в него xxx  груза
//Метод должен проверять если это кол-во груза помещается в грузовик то выводит в консоль ”Грузовик загружен”, если кол-во груза которое нужно загрузить больше чем то которое может влезть в наш грузовик то выводим
// “Вам нужен грузовик побольше ”.

        CargoCar cargoCar1 = new CargoCar(450, 160, 3000, "Toyota", 6, 20, 2000);
        cargoCar1.checkCapacity(200);
        System.out.println("***************************");
//Такой же метод делаем для Гражданских  самолётов, только проверяем вместимость пассажиров.

        PassengerPlane passengerPlane1 = new PassengerPlane(2090, 1000, 20000, "Boing",
                40, 400, 200, true);
        passengerPlane1.checkCapacity(50);
        System.out.println("***************************");

//Для Военных самолётов делаем метод выстрел, проверяем если кол-во ракет не равно 0 то выводим на консоль “ Ракета пошла…”, если 0 то
//“Боеприпасы отсутствуют”.
//А так же метод катапультирование, который проверит если наличие системы катапультирования true,
// то выводим “Катапультирование прошло успешно”, если false, то “У вас нет такой системы ”

        MilitaryPlane militaryPlane1 = new MilitaryPlane(4000, 1200, 3000, "Boing",
                20, 200, true, 14);
        militaryPlane1.checkRocket();
        System.out.println("***************************");
        militaryPlane1.checkEjection();
        System.out.println("***************************");
    }
}
